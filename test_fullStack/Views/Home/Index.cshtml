@model Dictionary<string, Dictionary<string, List<string>>>
@{
    ViewData["Title"] = "Home Page";
}

<style>
    .dropdown-container {
        margin: 20px;
    }

    .box{
        width: 50%;
        margin: auto;
        box-shadow: 0px 0px 20px 0px rgb(145 118 118 / 75%);

    }

    .select-container{
        margin-bottom: 30px;
    }

    label {
        display: block;
        margin-bottom: 5px;
    }

    select {
        width: 200px;
        padding: 8px;
        font-size: 16px;
    }
</style>

<div class="text-center dropdown-container">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>



    <div class="box">
        <!-- select country -->
        <div class="select-container">
            <label for="countries">Select Country:</label>
            <select id="countries" name="countries">
                <option value="">-- Select Country --</option>
                @foreach (var country in Model)
                {
                    <option value="@country.Key">@country.Key</option>
                }
            </select>
        </div>


        <!-- select state -->
        <div class="select-container">
            <label for="states">Select State:</label>
            <select id="states" name="states">
            </select>
        </div>


        <!-- select city -->
        <div class="select-container">
            <label for="cities">Select City:</label>
            <select id="cities" name="cities">
            </select>
        </div>

    </div>



    <script>
        document.getElementById('countries').addEventListener('change', function () {
            var selectedCountry = this.value;
            var statesAndCities = @Html.Raw(Json.Serialize(Model));

            // get states for a country selected
            var selectedData = statesAndCities[selectedCountry];

            // clean and add states to dropdown
            var statesDropdown = document.getElementById('states');
            statesDropdown.innerHTML = ''; 

            var option = document.createElement('option');
            option.value = "";
            option.text = "Select State";
            statesDropdown.add(option);
            for (var state in selectedData) {
                var option = document.createElement('option');
                option.value = state;
                option.text = state;
                statesDropdown.add(option);
            }

            // Clean and set by "" dropdown cities
            document.getElementById('cities').innerHTML = '';
        });

        // Listen what state is selected
        document.getElementById('states').addEventListener('change', function () {
            var selectedCountry = document.getElementById('countries').value;
            var selectedState = this.value;
            var statesAndCities = @Html.Raw(Json.Serialize(Model));

            // get cities about state selected
            var cities = statesAndCities[selectedCountry][selectedState];

            // clean and set cities
            var citiesDropdown = document.getElementById('cities');
            citiesDropdown.innerHTML = '';

            var option = document.createElement('option');
            option.value = "";
            option.text = "Select Cities";
            for (var i = 0; i < cities.length; i++) {
                var option = document.createElement('option');
                option.value = cities[i];
                option.text = cities[i];
                citiesDropdown.add(option);
            }
        });
    </script>
</div>